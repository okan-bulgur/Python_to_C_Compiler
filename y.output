State 0 conflicts: 1 shift/reduce
State 1 conflicts: 1 shift/reduce, 7 reduce/reduce
State 3 conflicts: 2 shift/reduce, 1 reduce/reduce
State 8 conflicts: 1 shift/reduce
State 12 conflicts: 3 shift/reduce
State 14 conflicts: 2 shift/reduce, 7 reduce/reduce
State 15 conflicts: 2 shift/reduce, 7 reduce/reduce
State 21 conflicts: 2 shift/reduce, 7 reduce/reduce
State 23 conflicts: 1 shift/reduce, 2 reduce/reduce
State 28 conflicts: 5 reduce/reduce
State 44 conflicts: 2 shift/reduce, 7 reduce/reduce
State 45 conflicts: 2 shift/reduce, 7 reduce/reduce
State 57 conflicts: 1 shift/reduce, 2 reduce/reduce
State 66 conflicts: 2 shift/reduce, 7 reduce/reduce
State 68 conflicts: 7 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: nextLine statements

    2 statements: statement NEXTLINE statements
    3           | statement
    4           | tabs nextLine statements
    5           | nextLine

    6 statement: assignment
    7          | control

    8 statementOfIf: assignment
    9              | control

   10 assignment: tabs VAR EQ calculations

   11 calculations: operand operator calculations
   12             | operand

   13 control: ifControl statementOfIf statements
   14        | ifControl statementOfIf statements afterIfControl

   15 ifControl: tabs IF comparible condition comparible COLON

   16 afterIfControl: elifControl statementOfIf statements
   17               | elifControl statementOfIf statements elseControl statementOfIf statements
   18               | elifControl statementOfIf statements afterIfControl
   19               | elseControl statementOfIf statements

   20 elifControl: tabs ELIF comparible condition comparible COLON

   21 elseControl: tabs ELSE COLON

   22 comparible: operand
   23           | VAR

   24 operand: STRING
   25        | INTEGER
   26        | FLOAT
   27        | VAR

   28 operator: SUM
   29         | SUB
   30         | MULT
   31         | DIV

   32 condition: EQ EQ
   33          | NEQ
   34          | BIGGER
   35          | SMALLER
   36          | BIGGER EQ
   37          | SMALLER EQ

   38 tabs: TAB
   39     | ε

   40 nextLine: NEXTLINE nextLine
   41         | NEXTLINE
   42         | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    STRING <str_val> (258) 24
    INTEGER <int_val> (259) 25
    FLOAT <float_val> (260) 26
    VAR <var_val> (261) 10 23 27
    COLON (262) 15 20 21
    SUM (263) 28
    SUB (264) 29
    MULT (265) 30
    DIV (266) 31
    IF (267) 15
    ELIF (268) 20
    ELSE (269) 21
    EQ (270) 10 32 36 37
    NEQ (271) 33
    BIGGER (272) 34 36
    SMALLER (273) 35 37
    TAB (274) 38
    NEXTLINE (275) 2 40 41


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 1
        on right: 0
    statements (23)
        on left: 2 3 4 5
        on right: 1 2 4 13 14 16 17 18 19
    statement (24)
        on left: 6 7
        on right: 2 3
    statementOfIf (25)
        on left: 8 9
        on right: 13 14 16 17 18 19
    assignment (26)
        on left: 10
        on right: 6 8
    calculations (27)
        on left: 11 12
        on right: 10 11
    control (28)
        on left: 13 14
        on right: 7 9
    ifControl (29)
        on left: 15
        on right: 13 14
    afterIfControl (30)
        on left: 16 17 18 19
        on right: 14 18
    elifControl (31)
        on left: 20
        on right: 16 17 18
    elseControl (32)
        on left: 21
        on right: 17 19
    comparible (33)
        on left: 22 23
        on right: 15 20
    operand (34)
        on left: 24 25 26 27
        on right: 11 12 22
    operator (35)
        on left: 28 29 30 31
        on right: 11
    condition (36)
        on left: 32 33 34 35 36 37
        on right: 15 20
    tabs (37)
        on left: 38 39
        on right: 4 10 15 20 21
    nextLine (38)
        on left: 40 41 42
        on right: 1 4 5 40


State 0

    0 $accept: • program $end

    NEXTLINE  shift, and go to state 1

    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 42 (nextLine)

    program   go to state 2
    nextLine  go to state 3


State 1

   40 nextLine: NEXTLINE • nextLine
   41         | NEXTLINE •

    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 41 (nextLine)
    $end      [reduce using rule 42 (nextLine)]
    VAR       reduce using rule 41 (nextLine)
    VAR       [reduce using rule 42 (nextLine)]
    IF        reduce using rule 41 (nextLine)
    IF        [reduce using rule 42 (nextLine)]
    ELIF      reduce using rule 41 (nextLine)
    ELIF      [reduce using rule 42 (nextLine)]
    ELSE      reduce using rule 41 (nextLine)
    ELSE      [reduce using rule 42 (nextLine)]
    TAB       reduce using rule 41 (nextLine)
    TAB       [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 41 (nextLine)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 41 (nextLine)

    nextLine  go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: nextLine • statements

    TAB       shift, and go to state 6
    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 39 (tabs)
    $end      [reduce using rule 42 (nextLine)]
    TAB       [reduce using rule 39 (tabs)]
    NEXTLINE  [reduce using rule 39 (tabs)]
    $default  reduce using rule 39 (tabs)

    statements  go to state 7
    statement   go to state 8
    assignment  go to state 9
    control     go to state 10
    ifControl   go to state 11
    tabs        go to state 12
    nextLine    go to state 13


State 4

   40 nextLine: NEXTLINE nextLine •

    $default  reduce using rule 40 (nextLine)


State 5

    0 $accept: program $end •

    $default  accept


State 6

   38 tabs: TAB •

    $default  reduce using rule 38 (tabs)


State 7

    1 program: nextLine statements •

    $default  reduce using rule 1 (program)


State 8

    2 statements: statement • NEXTLINE statements
    3           | statement •

    NEXTLINE  shift, and go to state 14

    NEXTLINE  [reduce using rule 3 (statements)]
    $default  reduce using rule 3 (statements)


State 9

    6 statement: assignment •

    $default  reduce using rule 6 (statement)


State 10

    7 statement: control •

    $default  reduce using rule 7 (statement)


State 11

   13 control: ifControl • statementOfIf statements
   14        | ifControl • statementOfIf statements afterIfControl

    TAB  shift, and go to state 6

    $default  reduce using rule 39 (tabs)

    statementOfIf  go to state 15
    assignment     go to state 16
    control        go to state 17
    ifControl      go to state 11
    tabs           go to state 18


State 12

    4 statements: tabs • nextLine statements
   10 assignment: tabs • VAR EQ calculations
   15 ifControl: tabs • IF comparible condition comparible COLON

    VAR       shift, and go to state 19
    IF        shift, and go to state 20
    NEXTLINE  shift, and go to state 1

    VAR       [reduce using rule 42 (nextLine)]
    IF        [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 42 (nextLine)

    nextLine  go to state 21


State 13

    5 statements: nextLine •

    $default  reduce using rule 5 (statements)


State 14

    2 statements: statement NEXTLINE • statements

    TAB       shift, and go to state 6
    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 39 (tabs)
    $end      [reduce using rule 42 (nextLine)]
    VAR       reduce using rule 39 (tabs)
    VAR       [reduce using rule 42 (nextLine)]
    IF        reduce using rule 39 (tabs)
    IF        [reduce using rule 42 (nextLine)]
    ELIF      reduce using rule 39 (tabs)
    ELIF      [reduce using rule 42 (nextLine)]
    ELSE      reduce using rule 39 (tabs)
    ELSE      [reduce using rule 42 (nextLine)]
    TAB       [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 39 (tabs)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 39 (tabs)

    statements  go to state 22
    statement   go to state 8
    assignment  go to state 9
    control     go to state 10
    ifControl   go to state 11
    tabs        go to state 12
    nextLine    go to state 13


State 15

   13 control: ifControl statementOfIf • statements
   14        | ifControl statementOfIf • statements afterIfControl

    TAB       shift, and go to state 6
    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 39 (tabs)
    $end      [reduce using rule 42 (nextLine)]
    VAR       reduce using rule 39 (tabs)
    VAR       [reduce using rule 42 (nextLine)]
    IF        reduce using rule 39 (tabs)
    IF        [reduce using rule 42 (nextLine)]
    ELIF      reduce using rule 39 (tabs)
    ELIF      [reduce using rule 42 (nextLine)]
    ELSE      reduce using rule 39 (tabs)
    ELSE      [reduce using rule 42 (nextLine)]
    TAB       [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 39 (tabs)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 39 (tabs)

    statements  go to state 23
    statement   go to state 8
    assignment  go to state 9
    control     go to state 10
    ifControl   go to state 11
    tabs        go to state 12
    nextLine    go to state 13


State 16

    8 statementOfIf: assignment •

    $default  reduce using rule 8 (statementOfIf)


State 17

    9 statementOfIf: control •

    $default  reduce using rule 9 (statementOfIf)


State 18

   10 assignment: tabs • VAR EQ calculations
   15 ifControl: tabs • IF comparible condition comparible COLON

    VAR  shift, and go to state 19
    IF   shift, and go to state 20


State 19

   10 assignment: tabs VAR • EQ calculations

    EQ  shift, and go to state 24


State 20

   15 ifControl: tabs IF • comparible condition comparible COLON

    STRING   shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    VAR      shift, and go to state 28

    comparible  go to state 29
    operand     go to state 30


State 21

    4 statements: tabs nextLine • statements

    TAB       shift, and go to state 6
    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 39 (tabs)
    $end      [reduce using rule 42 (nextLine)]
    VAR       reduce using rule 39 (tabs)
    VAR       [reduce using rule 42 (nextLine)]
    IF        reduce using rule 39 (tabs)
    IF        [reduce using rule 42 (nextLine)]
    ELIF      reduce using rule 39 (tabs)
    ELIF      [reduce using rule 42 (nextLine)]
    ELSE      reduce using rule 39 (tabs)
    ELSE      [reduce using rule 42 (nextLine)]
    TAB       [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 39 (tabs)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 39 (tabs)

    statements  go to state 31
    statement   go to state 8
    assignment  go to state 9
    control     go to state 10
    ifControl   go to state 11
    tabs        go to state 12
    nextLine    go to state 13


State 22

    2 statements: statement NEXTLINE statements •

    $default  reduce using rule 2 (statements)


State 23

   13 control: ifControl statementOfIf statements •
   14        | ifControl statementOfIf statements • afterIfControl

    TAB  shift, and go to state 6

    ELIF      reduce using rule 13 (control)
    ELIF      [reduce using rule 39 (tabs)]
    ELSE      reduce using rule 13 (control)
    ELSE      [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 13 (control)]
    $default  reduce using rule 13 (control)

    afterIfControl  go to state 32
    elifControl     go to state 33
    elseControl     go to state 34
    tabs            go to state 35


State 24

   10 assignment: tabs VAR EQ • calculations

    STRING   shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    VAR      shift, and go to state 36

    calculations  go to state 37
    operand       go to state 38


State 25

   24 operand: STRING •

    $default  reduce using rule 24 (operand)


State 26

   25 operand: INTEGER •

    $default  reduce using rule 25 (operand)


State 27

   26 operand: FLOAT •

    $default  reduce using rule 26 (operand)


State 28

   23 comparible: VAR •
   27 operand: VAR •

    COLON     reduce using rule 23 (comparible)
    COLON     [reduce using rule 27 (operand)]
    EQ        reduce using rule 23 (comparible)
    EQ        [reduce using rule 27 (operand)]
    NEQ       reduce using rule 23 (comparible)
    NEQ       [reduce using rule 27 (operand)]
    BIGGER    reduce using rule 23 (comparible)
    BIGGER    [reduce using rule 27 (operand)]
    SMALLER   reduce using rule 23 (comparible)
    SMALLER   [reduce using rule 27 (operand)]
    $default  reduce using rule 23 (comparible)


State 29

   15 ifControl: tabs IF comparible • condition comparible COLON

    EQ       shift, and go to state 39
    NEQ      shift, and go to state 40
    BIGGER   shift, and go to state 41
    SMALLER  shift, and go to state 42

    condition  go to state 43


State 30

   22 comparible: operand •

    $default  reduce using rule 22 (comparible)


State 31

    4 statements: tabs nextLine statements •

    $default  reduce using rule 4 (statements)


State 32

   14 control: ifControl statementOfIf statements afterIfControl •

    $default  reduce using rule 14 (control)


State 33

   16 afterIfControl: elifControl • statementOfIf statements
   17               | elifControl • statementOfIf statements elseControl statementOfIf statements
   18               | elifControl • statementOfIf statements afterIfControl

    TAB  shift, and go to state 6

    $default  reduce using rule 39 (tabs)

    statementOfIf  go to state 44
    assignment     go to state 16
    control        go to state 17
    ifControl      go to state 11
    tabs           go to state 18


State 34

   19 afterIfControl: elseControl • statementOfIf statements

    TAB  shift, and go to state 6

    $default  reduce using rule 39 (tabs)

    statementOfIf  go to state 45
    assignment     go to state 16
    control        go to state 17
    ifControl      go to state 11
    tabs           go to state 18


State 35

   20 elifControl: tabs • ELIF comparible condition comparible COLON
   21 elseControl: tabs • ELSE COLON

    ELIF  shift, and go to state 46
    ELSE  shift, and go to state 47


State 36

   27 operand: VAR •

    $default  reduce using rule 27 (operand)


State 37

   10 assignment: tabs VAR EQ calculations •

    $default  reduce using rule 10 (assignment)


State 38

   11 calculations: operand • operator calculations
   12             | operand •

    SUM   shift, and go to state 48
    SUB   shift, and go to state 49
    MULT  shift, and go to state 50
    DIV   shift, and go to state 51

    $default  reduce using rule 12 (calculations)

    operator  go to state 52


State 39

   32 condition: EQ • EQ

    EQ  shift, and go to state 53


State 40

   33 condition: NEQ •

    $default  reduce using rule 33 (condition)


State 41

   34 condition: BIGGER •
   36          | BIGGER • EQ

    EQ  shift, and go to state 54

    $default  reduce using rule 34 (condition)


State 42

   35 condition: SMALLER •
   37          | SMALLER • EQ

    EQ  shift, and go to state 55

    $default  reduce using rule 35 (condition)


State 43

   15 ifControl: tabs IF comparible condition • comparible COLON

    STRING   shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    VAR      shift, and go to state 28

    comparible  go to state 56
    operand     go to state 30


State 44

   16 afterIfControl: elifControl statementOfIf • statements
   17               | elifControl statementOfIf • statements elseControl statementOfIf statements
   18               | elifControl statementOfIf • statements afterIfControl

    TAB       shift, and go to state 6
    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 39 (tabs)
    $end      [reduce using rule 42 (nextLine)]
    VAR       reduce using rule 39 (tabs)
    VAR       [reduce using rule 42 (nextLine)]
    IF        reduce using rule 39 (tabs)
    IF        [reduce using rule 42 (nextLine)]
    ELIF      reduce using rule 39 (tabs)
    ELIF      [reduce using rule 42 (nextLine)]
    ELSE      reduce using rule 39 (tabs)
    ELSE      [reduce using rule 42 (nextLine)]
    TAB       [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 39 (tabs)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 39 (tabs)

    statements  go to state 57
    statement   go to state 8
    assignment  go to state 9
    control     go to state 10
    ifControl   go to state 11
    tabs        go to state 12
    nextLine    go to state 13


State 45

   19 afterIfControl: elseControl statementOfIf • statements

    TAB       shift, and go to state 6
    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 39 (tabs)
    $end      [reduce using rule 42 (nextLine)]
    VAR       reduce using rule 39 (tabs)
    VAR       [reduce using rule 42 (nextLine)]
    IF        reduce using rule 39 (tabs)
    IF        [reduce using rule 42 (nextLine)]
    ELIF      reduce using rule 39 (tabs)
    ELIF      [reduce using rule 42 (nextLine)]
    ELSE      reduce using rule 39 (tabs)
    ELSE      [reduce using rule 42 (nextLine)]
    TAB       [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 39 (tabs)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 39 (tabs)

    statements  go to state 58
    statement   go to state 8
    assignment  go to state 9
    control     go to state 10
    ifControl   go to state 11
    tabs        go to state 12
    nextLine    go to state 13


State 46

   20 elifControl: tabs ELIF • comparible condition comparible COLON

    STRING   shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    VAR      shift, and go to state 28

    comparible  go to state 59
    operand     go to state 30


State 47

   21 elseControl: tabs ELSE • COLON

    COLON  shift, and go to state 60


State 48

   28 operator: SUM •

    $default  reduce using rule 28 (operator)


State 49

   29 operator: SUB •

    $default  reduce using rule 29 (operator)


State 50

   30 operator: MULT •

    $default  reduce using rule 30 (operator)


State 51

   31 operator: DIV •

    $default  reduce using rule 31 (operator)


State 52

   11 calculations: operand operator • calculations

    STRING   shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    VAR      shift, and go to state 36

    calculations  go to state 61
    operand       go to state 38


State 53

   32 condition: EQ EQ •

    $default  reduce using rule 32 (condition)


State 54

   36 condition: BIGGER EQ •

    $default  reduce using rule 36 (condition)


State 55

   37 condition: SMALLER EQ •

    $default  reduce using rule 37 (condition)


State 56

   15 ifControl: tabs IF comparible condition comparible • COLON

    COLON  shift, and go to state 62


State 57

   16 afterIfControl: elifControl statementOfIf statements •
   17               | elifControl statementOfIf statements • elseControl statementOfIf statements
   18               | elifControl statementOfIf statements • afterIfControl

    TAB  shift, and go to state 6

    ELIF      reduce using rule 16 (afterIfControl)
    ELIF      [reduce using rule 39 (tabs)]
    ELSE      reduce using rule 16 (afterIfControl)
    ELSE      [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 16 (afterIfControl)]
    $default  reduce using rule 16 (afterIfControl)

    afterIfControl  go to state 63
    elifControl     go to state 33
    elseControl     go to state 64
    tabs            go to state 35


State 58

   19 afterIfControl: elseControl statementOfIf statements •

    $default  reduce using rule 19 (afterIfControl)


State 59

   20 elifControl: tabs ELIF comparible • condition comparible COLON

    EQ       shift, and go to state 39
    NEQ      shift, and go to state 40
    BIGGER   shift, and go to state 41
    SMALLER  shift, and go to state 42

    condition  go to state 65


State 60

   21 elseControl: tabs ELSE COLON •

    $default  reduce using rule 21 (elseControl)


State 61

   11 calculations: operand operator calculations •

    $default  reduce using rule 11 (calculations)


State 62

   15 ifControl: tabs IF comparible condition comparible COLON •

    $default  reduce using rule 15 (ifControl)


State 63

   18 afterIfControl: elifControl statementOfIf statements afterIfControl •

    $default  reduce using rule 18 (afterIfControl)


State 64

   17 afterIfControl: elifControl statementOfIf statements elseControl • statementOfIf statements
   19               | elseControl • statementOfIf statements

    TAB  shift, and go to state 6

    $default  reduce using rule 39 (tabs)

    statementOfIf  go to state 66
    assignment     go to state 16
    control        go to state 17
    ifControl      go to state 11
    tabs           go to state 18


State 65

   20 elifControl: tabs ELIF comparible condition • comparible COLON

    STRING   shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    VAR      shift, and go to state 28

    comparible  go to state 67
    operand     go to state 30


State 66

   17 afterIfControl: elifControl statementOfIf statements elseControl statementOfIf • statements
   19               | elseControl statementOfIf • statements

    TAB       shift, and go to state 6
    NEXTLINE  shift, and go to state 1

    $end      reduce using rule 39 (tabs)
    $end      [reduce using rule 42 (nextLine)]
    VAR       reduce using rule 39 (tabs)
    VAR       [reduce using rule 42 (nextLine)]
    IF        reduce using rule 39 (tabs)
    IF        [reduce using rule 42 (nextLine)]
    ELIF      reduce using rule 39 (tabs)
    ELIF      [reduce using rule 42 (nextLine)]
    ELSE      reduce using rule 39 (tabs)
    ELSE      [reduce using rule 42 (nextLine)]
    TAB       [reduce using rule 39 (tabs)]
    TAB       [reduce using rule 42 (nextLine)]
    NEXTLINE  [reduce using rule 39 (tabs)]
    NEXTLINE  [reduce using rule 42 (nextLine)]
    $default  reduce using rule 39 (tabs)

    statements  go to state 68
    statement   go to state 8
    assignment  go to state 9
    control     go to state 10
    ifControl   go to state 11
    tabs        go to state 12
    nextLine    go to state 13


State 67

   20 elifControl: tabs ELIF comparible condition comparible • COLON

    COLON  shift, and go to state 69


State 68

   17 afterIfControl: elifControl statementOfIf statements elseControl statementOfIf statements •
   19               | elseControl statementOfIf statements •

    $end      reduce using rule 17 (afterIfControl)
    $end      [reduce using rule 19 (afterIfControl)]
    VAR       reduce using rule 17 (afterIfControl)
    VAR       [reduce using rule 19 (afterIfControl)]
    IF        reduce using rule 17 (afterIfControl)
    IF        [reduce using rule 19 (afterIfControl)]
    ELIF      reduce using rule 17 (afterIfControl)
    ELIF      [reduce using rule 19 (afterIfControl)]
    ELSE      reduce using rule 17 (afterIfControl)
    ELSE      [reduce using rule 19 (afterIfControl)]
    TAB       reduce using rule 17 (afterIfControl)
    TAB       [reduce using rule 19 (afterIfControl)]
    NEXTLINE  reduce using rule 17 (afterIfControl)
    NEXTLINE  [reduce using rule 19 (afterIfControl)]
    $default  reduce using rule 17 (afterIfControl)


State 69

   20 elifControl: tabs ELIF comparible condition comparible COLON •

    $default  reduce using rule 20 (elifControl)
